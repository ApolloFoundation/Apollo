<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.apollocurrency</groupId>
    <artifactId>apollo-blockchain</artifactId>
    <version>1.45.2</version>
  </parent>

  <artifactId>apl-exec</artifactId>
  <name>apl-exec</name>
  <packaging>jar</packaging>

  <dependencies>
    <dependency>
      <groupId>com.apollocurrency</groupId>
      <artifactId>apl-utils</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.apollocurrency</groupId>
      <artifactId>apl-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.apollocurrency</groupId>
      <artifactId>apl-updater</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.apollocurrency</groupId>
      <artifactId>apl-conf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <!-- command line arguments processing -->
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
    </dependency>
    <!-- unit tests -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>./</classpathPrefix>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>com.apollocurrency.aplwallet.apl.exec.Apollo</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeTypes>zip</excludeTypes>
              <excludeArtifactIds>weld-junit5,weld-junit-common,jsonassert</excludeArtifactIds>
              <excludeGroupIds>org.junit,org.mockito,org.opentest4j,org.hibernate.javax.persistence</excludeGroupIds>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- create cross-platform zip distribution -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>distro-assembly</id>
            <phase>${zipExecutionPhase}</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/zipdist.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>${zip-file-name}-${project.version}-NoOS-NoArch</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- calculate SHA-256 sums -->
      <plugin>
        <groupId>net.nicoulaj.maven.plugins</groupId>
        <artifactId>checksum-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>${zipExecutionPhase}</phase>
            <goals>
              <goal>files</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <fileSets>
            <fileSet>
              <directory>${project.build.directory}</directory>
              <includes>
                <include>${zip-file-name}-${project.version}-NoOS-NoArch.${zip-format}</include>
              </includes>
            </fileSet>
          </fileSets>
          <algorithms>
            <algorithm>SHA-256</algorithm>
          </algorithms>
          <individualFiles>true</individualFiles>
          <types>
            <type>zip</type>
          </types>
        </configuration>
      </plugin>
      <plugin>
        <groupId>ca.szc.maven</groupId>
        <artifactId>jsonpath-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>update-version</id>
            <phase>process-resources</phase>
            <goals>
              <goal>modify</goal>
            </goals>
            <configuration>
              <file>${basedir}/packaging/pkg-apollo-blockchain.json</file>
              <formatter>conventional</formatter>
              <modifications>
                <modification>
                  <expression>$.version</expression>
                  <value>${project.version}</value>
                </modification>
              </modifications>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-shade-plugin</artifactId>
              <configuration>
                <filters>
                  <filter>
                    <artifact>*:*</artifact>
                    <excludes>
                      <exclude>META-INF/*.SF</exclude>
                      <exclude>META-INF/*.DSA</exclude>
                      <exclude>META-INF/*.RSA</exclude>
                    </excludes>
                  </filter>
                </filters>
                <transformers>
                  &lt;!&ndash; Add a transformer to exclude any other manifest files (possibly from dependencies). &ndash;&gt;
                  <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                    <resource>MANIFEST.MF</resource>
                  </transformer>
                  &lt;!&ndash; Add a transformer to include your custom manifest file. &ndash;&gt;
                  <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                    <resource>META-INF/MANIFEST.MF</resource>
                    <file>src/main/resources/META-INF/MANIFEST.MF</file>
                  </transformer>
                  &lt;!&ndash; add Main-Class to manifest file &ndash;&gt;
      &lt;!&ndash;
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <mainClass>com.apollocurrency.aplwallet.apl.exec.Apollo</mainClass>
                  </transformer>
      &ndash;&gt;
                </transformers>
                <artifactSet>
                  <excludes>
                    <exclude>org.jboss.weld:junit5</exclude>
                    <exclude>org.jboss.weld:weld-junit-common</exclude>
                    <exclude>junit:junit</exclude>
                    <exclude>org.skyscreamer:jsonassert</exclude>
                    <exclude>com.fasterxml.jackson.module:jackson-module-paranamer</exclude>
                    <exclude>org.mockito:*</exclude>
                    <exclude>org.opentest4j:*</exclude>
                    <exclude>org.hibernate.javax.persistence:*</exclude>
                    <exclude>org.apache.maven:lib:tests</exclude>
                    <exclude>log4j:log4j:jar:</exclude>
                  </excludes>
                </artifactSet>
              </configuration>
              <executions>
                <execution>
                  <phase>package</phase>
                  <goals>
                    <goal>shade</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
      -->
    </plugins>
  </build>
</project>