
#### 2FA ####
#
# Enable 2fa data storing in file system
apl.store2FAInFileSystem=false

# DEPRECATED
# use cmd args instead
# Directory which wil be a storage for 2fa data on mainnet
apl.dir2FA=./keystore/2fa

# DEPRECATED
# testnet and mainnet 2fa dirs will be separated by using chainId but not testnet prefix
# Directory which wil be a storage for 2fa data on testnet
apl.testnetDir2FA=./testnet_keystore/2fa

# Suffix of 2fa issuer
apl.issuerSuffix2FA=


#### MIGRATION ####

# After successful migration db will be deleted depending on this option
apl.migrator.db.deleteAfterMigration=true

# After successful migration vault keystore will be deleted depending on this option
apl.migrator.vaultkeystore.deleteAfterMigration=true

# After successful migration 2fa data will be deleted depending on this option
apl.migrator.2fa.deleteAfterMigration=true


#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#apl.log=apl.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#apl.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
apl.enableLogTraceback=false

# Enable sql logging (query + time ms)
apl.enableSqlLogs=false

# Enable logging of exception stack traces.
apl.enableStackTraces=true

# Enable logging of Jetty messages.
#apl.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
apl.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging
# purposes.
apl.debugTraceAccounts=

# File name for logging tracked account balances.
apl.debugTraceLog=apl-trace.csv

# Separator character for trace log.
apl.debugTraceSeparator=\t

# Quote character for trace log.
apl.debugTraceQuote="

# Log changes to unconfirmed balances.
apl.debugLogUnconfirmed=false



#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible
# customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# By default the apl_db folder is expected to be in the directory provided by DirProvider for
# specified application mode (possible Service mode and User mode). By default
# application is running in User mode and db will be located at
# /home/user/.apl-blockchain/apl-blochain-db/chainId(shortened form)/
# This directory will be  created if missing.
#
# apl.dbUrl=jdbc:h2:./apl_db/apl;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true.
# apl.testDbUrl=jdbc:h2:./apl_test_db/apl;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

apl.dbType=h2
# Deprecated, db type for any chain specified by apl.dbType
#apl.testDbType=h2

# Deprecated, Only used for migration
# db dir now specified by dir provider and can be overridden by environment variables or cmd args
apl.dbDir=./apl_db
apl.testDbDir=./apl_test_db

# Should unit test SQL data be loaded from db/data.sql ?
apl.testData=true

apl.dbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

# Deprecated,  testnet and mainnet dbs has the same configuration
apl.testDbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE;TRACE_LEVEL_SYSTEM_OUT=3

apl.dbUsername=sa

# Deprecated, Used only for migration testnet and mainnet dbs has the same configuration
apl.testDbUsername=sa

apl.dbPassword=sa

# Deprecated, used only for migration
# testnet and mainnet dbs has the same configuration
apl.testDbPassword=sa

# Database connection timeout in seconds.
apl.dbLoginTimeout=70

# Database default lock timeout in seconds.
apl.dbDefaultLockTimeout=60

# Database max memory rows limit.
apl.dbMaxMemoryRows=10000

# Maximum simultaneous database connections.
apl.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, the cache size varies from a minimum of 16MB for heap sizes 160MB
# or less, to a maximum of 256MB for heap sizes 640MB or higher.
apl.dbCacheKB=0

# Enable trimming of derived objects tables. Disabling this will significantly
# worsen performance.
apl.trimDerivedTables=true

# If trimming is enabled, maintain enough previous height records to allow
# rollback of at least that many blocks. Cannot be set to less than 720.
# After increasing this value, a full re-scan also needs to be done in order for
# the previously trimmed records to be re-created and preserved.
apl.maxRollback=21600

# When trimming is enabled, it is run every apl.trimFrequency blocks.
apl.trimFrequency=22000

# Override the lifetime of prunable data to keep them longer, value in seconds.
# Set to -1 to disable pruning. Has no effect if set to less then the minimum
# required lifetime of two weeks (1209600 seconds) on mainnet, or 24 hours
# (86400 seconds) on testnet. Default is 90 days.
apl.maxPrunableLifetime=7776000

# Include expired prunable parts if requested as long as it is still available.
# In order to provide the PRUNABLE peer service, apl.maxPrunableLifetime must
# be -1 and apl.includeExpiredPrunable must be true.  The PRUNABLE service means
# the peer will provide expired prunable data to other peers when requested.
apl.includeExpiredPrunable=true

# Threshold for logging database statements (milliseconds).
apl.statementLogThreshold=10000

# Threshold for logging database transactions (milliseconds).
apl.transactionLogThreshold=15000

# Threshold for trim operations (milliseconds).
apl.trimOperationsLogThreshold=1000

# Log the average transaction time after this many minutes.
apl.transactionLogInterval=15

# Public keys are by default cached, which consumes 10-15 MB of memory.
apl.enablePublicKeyCache=true

# When trimming or pruning derived tables, do a commit after that many records
# are processed. Default if not set is Integer.MAX_VALUE which prevents such
# intermediate commits.
apl.batchCommitSize=100


######################## SHARDING ########################

# Backup db to zip before making a shard db and delete old data from main db
apl.sharding.backupDb=true



#### Blocks and transactions ####

# Delay generation of next block in order to accumulate more transactions in it.
# Waiting for much more than 15 s is not useful as transactions are allowed at
# most 15 s timestamp difference from the block they can be included in.
apl.forgingDelay=20

# Generate and submit the next block before its hit time in response to
# receiving a lower difficulty block. Submitting the block more than 15 s before
# its time however will lead to its rejection.
apl.forgingSpeedup=3

# Maximum number of forging accounts allowed on this node.
apl.maxNumberOfForgers=100

# Verify batches of blocks downloaded from a single peer with that many other
# peers.
apl.numberOfForkConfirmations=0
apl.testnetNumberOfForkConfirmations=0

# Enable re-broadcasting of new transactions until they are received back from
# at least one peer, or found in the blockchain. This feature can optionally be
# disabled, to avoid the risk of revealing that this node is the submitter of
# such re-broadcasted new transactions.
apl.enableTransactionRebroadcasting=true

# Do not allow the number of unconfirmed transactions in memory to exceed this
# value. If exceeded, the same transaction ordering as when choosing which
# transactions to include in a forged block is used to decide which to keep in
# the unconfirmed pool.
# Set to 0 or negative for no limit.
apl.maxUnconfirmedTransactions=2000

# Maximum number of account monitors allowed on this node
apl.maxNumberOfMonitors=100



#### ACCOUNT LEDGER ####

# Address of accounts (in RS format) to track balance changes in the ledger
# table, separated by ';'.
# Set to * to track changes for all accounts. Specify no accounts to disable
# the account ledger.
apl.ledgerAccounts=*

# Specify 0 to not log unconfirmed changes, 1 to log unconfirmed changes or 2 to
# log only unconfirmed changes.
apl.ledgerLogUnconfirmed=2

# Specify the number of blocks to keep when trimming the account ledger table.
# A value of zero will cause all blocks to be kept.
apl.ledgerTrimKeep=900000


#### Developers only ####
#Deprecated. Use chains.json for config
# Maximum number of transactions per block. This is parameterized for load
# testing purposes, but for an existing blockchain should not be changed.
#apl.maxNumberOfTransactions=255;

# Maximum peer request size. Should be increased if block or transaction
# size limits are increased.
apl.maxPeerRequestSize=4194304

# Maximum peer response size. Should be increased if block or transaction
# size limits are increased.
apl.maxPeerResponseSize=4194304

# Maximum peer websocket message size. Should be increased if block or
# transaction size limits are increased.
apl.maxPeerMessageSize=15728640


# Force re-validation of blocks and transaction at start.
apl.forceValidate=false

# Force re-build of derived objects tables at start.
apl.forceScan=false

# Scale epoch time for faster forging. Only works when offline.
# apl.timeMultiplier=1

# Enable the following AddOns, which must also be on the classpath, e.g. placed
# in the addons/classes or addons/lib directory. List of class names, separated
# by semicolon.
#apl.addOns=apl.addons.Demo; apl.addons.AfterStart; apl.addons.BeforeShutdown

# Demo after start and before shutdown scripts
#apl.afterStartScript=../bin/afterStart.sh
#apl.beforeShutdownScript=../bin/beforeShutdown.sh

# ARS normally sets a customized security policy when AddOns are used.
# Set to true to use the default security manager when AddOns are used.
apl.disableSecurityPolicy=false

# Display a custom warning text on the login screen in the client UI.
#apl.customLoginWarning=

# Enable update feature for automatic installing updates to avoid forks and keep software up-to-date
apl.allowUpdates=false
